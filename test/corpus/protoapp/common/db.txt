================================================================================
common.db
================================================================================
module common.db {

// Annotation to indicate that an ADL type is to be
// mapped to a database table
struct DbTable
{
  // If non empty, specifies the table name in the
  // database. Otherwise it will be derived from the
  // name of the adl struct
  String table_name = "";

  // Indexes for the table
  Vector<Vector<String>> indexes = [];

  // Uniqueness constraints over the table
  Vector<Vector<String>> uniqueness_constraints = [];

  // Additional SQL to be run after all tables have been
  // created
  Vector<String> extra_sql = [];

  // The textual columns used to assemble a label for the row
  // (to be shown in UIs alongside  the id)
  Vector<String> label = [];

  // A text prefix for primary keys for this table (if it has them)
  String id_prefix = "";
};

// Annotation to indicate that an ADL type is to be
// mapped to a database view.
struct DbView {

  // If non empty, specifies the view name in the
  // database. Otherwise it will be derived from the
  // name of the adl struct
  String view_name = "";
};

/// Field level annotation to override the name of the
/// database column.
type DbColumnName = String;

/// Field or type level annotation to override the type of the
/// database column.
type DbColumnType = String;

/// Field level annotation to indicate that that the fields
/// contained in this field should be lifted up to the current
/// table.
type DbSpread = Void;

/// Field level annotation to indicate that that field
/// is part of the primary key
type DbPrimaryKey = Void;

/// A reference for a database stored value, referenced by a
/// string primary key.
newtype DbKey<T> = String;

/// Extent a datatype for use as a database table, giving it a
/// primary key
struct WithId<T>
{
  @DbPrimaryKey
  String id;

  @DbSpread
  T value;
};

};

--------------------------------------------------------------------------------

(source_file
  (module_definition
    (scoped_name
      (identifier)
      (identifier))
    (module_body
      (comment)
      (comment)
      (struct_definition
        (type_name
          (identifier))
        (field_block
          (comment)
          (comment)
          (comment)
          (field
            (type_expression
              (primitive_type))
            (identifier)
            (json_value
              (json_string)))
          (comment)
          (field
            (type_expression
              (primitive_type
                (type_arguments
                  (type_expression
                    (primitive_type
                      (type_arguments
                        (type_expression
                          (primitive_type))))))))
            (identifier)
            (json_value
              (json_array)))
          (comment)
          (field
            (type_expression
              (primitive_type
                (type_arguments
                  (type_expression
                    (primitive_type
                      (type_arguments
                        (type_expression
                          (primitive_type))))))))
            (identifier)
            (json_value
              (json_array)))
          (comment)
          (comment)
          (field
            (type_expression
              (primitive_type
                (type_arguments
                  (type_expression
                    (primitive_type)))))
            (identifier)
            (json_value
              (json_array)))
          (comment)
          (comment)
          (field
            (type_expression
              (primitive_type
                (type_arguments
                  (type_expression
                    (primitive_type)))))
            (identifier)
            (json_value
              (json_array)))
          (comment)
          (field
            (type_expression
              (primitive_type))
            (identifier)
            (json_value
              (json_string)))))
      (comment)
      (comment)
      (struct_definition
        (type_name
          (identifier))
        (field_block
          (comment)
          (comment)
          (comment)
          (field
            (type_expression
              (primitive_type))
            (identifier)
            (json_value
              (json_string)))))
      (docstring)
      (type_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_expression
          (primitive_type)))
      (docstring)
      (type_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_expression
          (primitive_type)))
      (docstring)
      (docstring)
      (type_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_expression
          (primitive_type)))
      (docstring)
      (type_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_expression
          (primitive_type)))
      (docstring)
      (newtype_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_parameters
          (identifier))
        (type_expression
          (primitive_type)))
      (docstring)
      (struct_definition
        (docstring_block
          (docstring))
        (type_name
          (identifier))
        (type_parameters
          (identifier))
        (field_block
          (field
            (annotations
              (annotation
                (scoped_name
                  (identifier))))
            (type_expression
              (primitive_type))
            (identifier))
          (field
            (annotations
              (annotation
                (scoped_name
                  (identifier))))
            (type_expression
              (scoped_name
                (identifier)))
            (identifier)))))))
